# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Gradle@2
  inputs:
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'build'
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)'
    publishLocation: 'pipeline'

- task: DownloadBuildArtifacts@0
  inputs:
    buildType: 'current'
    downloadType: 'specific'
    itemPattern: '**/build/libs/*jar'
    downloadPath: '$(System.ArtifactsDirectory)'

- task: AzureFileCopy@3
  inputs:
    SourcePath: '$(Pipeline.Workspace)'
    azureSubscription: 'Pay-As-You-Go (8b8dd0e3-8cff-4141-8422-47d2d8c78cb7)'
    Destination: 'AzureBlob'
    storage: 'gluudiagst'
    ContainerName: 'artifacts'
